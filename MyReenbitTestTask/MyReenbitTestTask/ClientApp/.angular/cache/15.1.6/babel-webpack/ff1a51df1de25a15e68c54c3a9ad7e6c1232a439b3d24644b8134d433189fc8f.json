{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"*Wrong e-mail\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtext(1, \"*Wrong file\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor(http, baseUrl) {\n    this.currUrl = \"\";\n    this.emailError = false;\n    this.fileError = false;\n    this.selectedFile = null;\n    this.email = '';\n    this.currUrl = baseUrl + 'fileupload';\n    this.http = http;\n  }\n  onFileSelected(event) {\n    this.selectedFile = event.target.files[0];\n  }\n  onSubmit() {\n    this.emailError = false;\n    this.fileError = false;\n    if (!this.isValidEmail(this.email)) {\n      this.emailError = true;\n      return;\n    }\n    if (!this.selectedFile) {\n      this.fileError = true;\n      return;\n    }\n    // Create a FormData object to send the file and email\n    const formData = new FormData();\n    formData.append('file', this.selectedFile);\n    formData.append('email', this.email);\n    this.http.post(this.currUrl, formData).subscribe(response => {\n      console.log(response);\n    }, error => {\n      console.error(error);\n    });\n  }\n  isValidEmail(email) {\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    return emailRegex.test(email);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 19,\n  vars: 4,\n  consts: [[1, \"container\"], [1, \"main-div\"], [1, \"main-form\"], [1, \"form-header\"], [1, \"form-div\"], [1, \"form-span\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"error-span\", 4, \"ngIf\"], [\"type\", \"file\", \"name\", \"file\", \"accept\", \".docx\", \"required\", \"\", 3, \"change\"], [\"type\", \"submit\", 1, \"btn-primary\", 3, \"disabled\"], [1, \"error-span\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\")(1, \"div\", 0)(2, \"div\", 1)(3, \"form\", 2)(4, \"div\", 3);\n      i0.ɵɵtext(5, \"Sending Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"span\", 5);\n      i0.ɵɵtext(8, \"E-mail:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"br\");\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(11, AppComponent_span_11_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"span\", 5);\n      i0.ɵɵtext(14, \"File:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\");\n      i0.ɵɵelementStart(16, \"input\", 8);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_16_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(17, AppComponent_span_17_Template, 2, 0, \"span\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 9);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailError);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.fileError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.emailError || ctx.fileError);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAQUA,gCAA4C;IAAAA,6BAAa;IAAAA,iBAAO;;;;;IAKhEA,gCAA2C;IAAAA,2BAAW;IAAAA,iBAAO;;;ACNvE,OAAM,MAAOC,YAAY;EAQvBC,YAAYC,IAAgB,EAAsBC,OAAe;IAPjE,YAAO,GAAW,EAAE;IAEpB,eAAU,GAAY,KAAK;IAC3B,cAAS,GAAY,KAAK;IAC1B,iBAAY,GAAgB,IAAI;IAChC,UAAK,GAAW,EAAE;IAGhB,IAAI,CAACC,OAAO,GAAGD,OAAO,GAAG,YAAY;IACrC,IAAI,CAACD,IAAI,GAAGA,IAAI;EAClB;EAEAG,cAAc,CAACC,KAAU;IACvB,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC3C;EAEAC,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,SAAS,GAAG,KAAK;IAEtB,IAAI,CAAC,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,KAAK,CAAC,EAAE;MAClC,IAAI,CAACH,UAAU,GAAG,IAAI;MACtB;;IAGF,IAAI,CAAC,IAAI,CAACJ,YAAY,EAAE;MACtB,IAAI,CAACK,SAAS,GAAG,IAAI;MACrB;;IAGF;IACA,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACV,YAAY,CAAC;IAC1CQ,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACH,KAAK,CAAC;IAEpC,IAAI,CAACZ,IAAI,CAACgB,IAAI,CAAC,IAAI,CAACd,OAAO,EAAEW,QAAQ,CAAC,CACnCI,SAAS,CAACC,QAAQ,IAAG;MACpBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACvB,CAAC,EAAEG,KAAK,IAAG;MACTF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;EAEQV,YAAY,CAACC,KAAa;IAChC,MAAMU,UAAU,GAAG,mDAAmD;IACtE,OAAOA,UAAU,CAACC,IAAI,CAACX,KAAK,CAAC;EAC/B;;AA/CWd,YAAY;mBAAZA,YAAY,4DAQe,UAAU;AAAA;AARrCA,YAAY;QAAZA,YAAY;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPzB/B,4BAAM;MAI2BA,4BAAY;MAAAA,iBAAM;MAC3CA,8BAAsB;MACIA,uBAAO;MAAAA,iBAAO;MAAAA,qBAAI;MAC1CA,iCAA8D;MAA1CA;QAAA;MAAA,EAAmB;MAAvCA,iBAA8D;MAC9DA,iEAAgE;MAClEA,iBAAM;MACNA,+BAAsB;MACIA,sBAAK;MAAAA,iBAAO;MAAAA,sBAAI;MACxCA,iCAAyF;MAAtEA;QAAA,OAAUgC,0BAAsB;MAAA,EAAC;MAApDhC,iBAAyF;MACzFA,iEAA6D;MAC/DA,iBAAM;MACNA,4BAA8E;MAChFA,iBAAO;;;MATiBA,gBAAmB;MAAnBA,mCAAmB;MAChCA,eAAgB;MAAhBA,qCAAgB;MAKhBA,eAAe;MAAfA,oCAAe;MAEiBA,eAAoC;MAApCA,0DAAoC","names":["i0","AppComponent","constructor","http","baseUrl","currUrl","onFileSelected","event","selectedFile","target","files","onSubmit","emailError","fileError","isValidEmail","email","formData","FormData","append","post","subscribe","response","console","log","error","emailRegex","test","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\Code\\GitRepostiories\\MyReenbitTestTask\\MyReenbitTestTask\\MyReenbitTestTask\\ClientApp\\src\\app\\app.component.html","D:\\Code\\GitRepostiories\\MyReenbitTestTask\\MyReenbitTestTask\\MyReenbitTestTask\\ClientApp\\src\\app\\app.component.ts"],"sourcesContent":["<body>\r\n  <div class=\"container\">\r\n    <div class=\"main-div\">\r\n      <form class=\"main-form\">\r\n        <div class=\"form-header\">Sending Form</div>\r\n        <div class=\"form-div\">\r\n          <span class=\"form-span\">E-mail:</span><br>\r\n          <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" required>\r\n          <span *ngIf=\"emailError\" class=\"error-span\">*Wrong e-mail</span>\r\n        </div>\r\n        <div class=\"form-div\">\r\n          <span class=\"form-span\">File:</span><br>\r\n          <input type=\"file\" (change)=\"onFileSelected($event)\" name=\"file\" accept=\".docx\" required>\r\n          <span *ngIf=\"fileError\" class=\"error-span\">*Wrong file</span>\r\n        </div>\r\n        <input type=\"submit\" class=\"btn-primary\" [disabled]=\"emailError || fileError\">\r\n      </form>\r\n    </div>\r\n  </div>\r\n</body>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  currUrl: string = \"\";\r\n  http: HttpClient;\r\n  emailError: boolean = false;\r\n  fileError: boolean = false;\r\n  selectedFile: File | null = null;\r\n  email: string = '';\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    this.currUrl = baseUrl + 'fileupload';\r\n    this.http = http;\r\n  }\r\n\r\n  onFileSelected(event: any) {\r\n    this.selectedFile = event.target.files[0];\r\n  }\r\n\r\n  onSubmit() {\r\n    this.emailError = false;\r\n    this.fileError = false;\r\n\r\n    if (!this.isValidEmail(this.email)) {\r\n      this.emailError = true;\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedFile) {\r\n      this.fileError = true;\r\n      return;\r\n    }\r\n\r\n    // Create a FormData object to send the file and email\r\n    const formData = new FormData();\r\n    formData.append('file', this.selectedFile);\r\n    formData.append('email', this.email);\r\n\r\n    this.http.post(this.currUrl, formData)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n      }, error => {\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  private isValidEmail(email: string): boolean {\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n    return emailRegex.test(email);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}